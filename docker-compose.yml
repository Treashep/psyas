x-build-args: &build_args
  INSTALL_PYTHON_VERSION: "3.11"
  INSTALL_NODE_VERSION: "20.15.1"

x-default-volumes: &default_volumes
  volumes:
    - ./:/app
    - node-modules:/app/node_modules
    # 移除 SQLite 数据库文件映射（不再需要）：- ./dev.db:/tmp/dev.db

# 新增：MySQL 服务配置
x-mysql-env: &mysql_env
  MYSQL_ROOT_PASSWORD: 123456 # 与 .env 中的密码一致
  MYSQL_DATABASE: psychology_agent            # 与 .env 中的数据库名一致

services:
  # 新增：MySQL 服务
  mysql:
    image: mysql:latest
    environment: *mysql_env
    ports:
      - "3307:3306"  # 映射到主机 3307 端口（避免与本地 MySQL 冲突）
    volumes:
      - mysql-data:/var/lib/mysql  # 持久化存储 MySQL 数据
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 开发环境 Flask 服务
  flask-dev:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    image: "psyas-development"
    ports:
      - "8080:5000"
      - "2992:2992"
    <<: *default_volumes
    environment:
      # 连接到 MySQL 服务（服务名 "mysql" 可直接作为主机名）
      DATABASE_URL: "mysql+pymysql://root:123456@mysql:3306/psychology_agent"
    depends_on:
      mysql:
        condition: service_healthy  # 等待 MySQL 就绪后再启动

  # 生产环境 Flask 服务（类似开发环境，调整环境变量）
  flask-prod:
    build:
      context: .
      target: production
      args:
        <<: *build_args
    image: "psyas-production"
    ports:
      - "8080:5000"
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
      LOG_LEVEL: info
      GUNICORN_WORKERS: 4
      # 生产环境连接 MySQL
      DATABASE_URL: "mysql+pymysql://root:123456@mysql:3306/psychology_agent"
    <<: *default_volumes
    depends_on:
      mysql:
        condition: service_healthy

  # 管理命令服务（如数据库迁移）
  manage:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    entrypoint: flask
    environment:
      FLASK_ENV: development  # 管理命令用开发环境配置
      DATABASE_URL: "mysql+pymysql://root:123456@mysql:3306/psychology_agent"
    image: "psyas-manage"
    stdin_open: true
    tty: true
    <<: *default_volumes
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  node-modules:
  mysql-data:  # 新增：MySQL 数据卷（持久化数据）